# dao/interfaces.py
from typing import Optional, List, Protocol
from models.user import User
from models.entry import Entry
from models.insights import Insight


class IUserDAO(Protocol):
    def create(self, user: User) -> User: ...
    def find_by_id(self, user_id: int) -> Optional[User]: ...
    def find_by_email(self, email: str) -> Optional[User]: ...
    def update(self, user: User) -> User: ...
    def update_partial(self, user_id: int, **fields) -> Optional[User]: ...
    def delete(self, user_id: int) -> None: ...
    def list_recent(self, limit: int = 50, offset: int = 0) -> List[User]: ...


class IEntryDAO(Protocol):
    def create(self, entry: Entry) -> Entry: ...
    def find_by_id(self, entry_id: int) -> Optional[Entry]: ...
    def list_by_user(self, user_id: int, limit: int = 100) -> List[Entry]: ...
    def update(self, entry: Entry) -> Entry: ...
    def update_partial(self, entry_id: int, **fields) -> Optional[Entry]: ...
    def delete(self, entry_id: int) -> None: ...


class IInsightDAO(Protocol):
    def upsert_for_entry(self, insight: Insight) -> Insight: ...
    def find_by_entry(self, entry_id: int) -> Optional[Insight]: ...
    def find_by_id(self, insight_id: int) -> Optional[Insight]: ...
    def update_partial(self, entry_id: int, **fields) -> Optional[Insight]: ...
    def delete_by_entry(self, entry_id: int) -> None: ...
    def delete(self, insight_id: int) -> None: ...
    def list_recent(self, limit: int = 100, offset: int = 0) -> List[Insight]: ...
